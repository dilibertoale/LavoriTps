<!doctype html>
<html lang="it">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Anagrafica utente — Generazione</title>
  <style>
    :root{font-family:system-ui,-apple-system,Segoe UI,Roboto,"Helvetica Neue",Arial;margin:0;color:#111}
    body{display:flex;align-items:center;justify-content:center;min-height:100vh;background:#f4f6f8;padding:24px}
    .card{background:#fff;border-radius:12px;box-shadow:0 6px 20px rgba(12,20,40,0.08);max-width:760px;width:100%;padding:24px}
    h1{font-size:20px;margin:0 0 8px}
    p.lead{margin:0 0 18px;color:#475569}
    form{display:grid;grid-template-columns:repeat(2,1fr);gap:12px}
    label{display:block;font-size:13px;color:#334155;margin-bottom:6px}
    input[type=text], input[type=date], input[type=number]{width:100%;padding:10px;border:1px solid #e6e9ef;border-radius:8px;font-size:14px}
    .full{grid-column:1/-1}
    .actions{display:flex;gap:8px;margin-top:12px}
    button{padding:10px 14px;border-radius:10px;border:0;cursor:pointer;font-weight:600}
    .primary{background:#0f62fe;color:#fff}
    .ghost{background:#eef2ff;color:#0f62fe}
    .result{margin-top:18px;padding:14px;border-radius:10px;background:#f8fafc;border:1px solid #e6eefb}
    .row{display:flex;gap:12px;flex-wrap:wrap}
    .note{font-size:13px;color:#64748b;margin-top:8px}
    footer{margin-top:14px;font-size:13px;color:#64748b}
    @media (max-width:640px){form{grid-template-columns:1fr}}
  </style>
</head>
<body>
  <div class="card">
    <h1>Inserisci anagrafica utente</h1>
    <p class="lead">Compila i campi sottostanti. Se inserisci la data di nascita, verrà calcolata l'età e la generazione di appartenenza.</p>

    <form id="anagraficaForm" onsubmit="return false;">
      <div>
        <label for="nome">Nome</label>
        <input id="nome" name="nome" type="text" placeholder="Es. Mario" required>
      </div>

      <div>
        <label for="cognome">Cognome</label>
        <input id="cognome" name="cognome" type="text" placeholder="Es. Rossi" required>
      </div>

      <div class="full">
        <label for="indirizzo">Indirizzo</label>
        <input id="indirizzo" name="indirizzo" type="text" placeholder="Via Roma 1, Interno 2">
      </div>

      <div>
        <label for="citta">Città</label>
        <input id="citta" name="citta" type="text" placeholder="Es. Milano">
      </div>

      <div>
        <label for="cap">CAP</label>
        <input id="cap" name="cap" type="text" placeholder="Es. 20100" pattern="[0-9]{5}" title="Inserisci 5 cifre (es. 20100)">
      </div>

      <div>
        <label for="nascita">Data di nascita</label>
        <input id="nascita" name="nascita" type="date">
      </div>

      <div>
        <label for="eta">Età (calcolata)</label>
        <input id="eta" name="eta" type="number" readonly>
      </div>

      <div class="full">
        <div class="actions">
          <button class="primary" id="calcolaBtn" type="button">Calcola età e generazione</button>
          <button class="ghost" id="resetBtn" type="button">Reset</button>
        </div>
      </div>
    </form>

    <div id="output" class="result" aria-live="polite" hidden>
      <div id="summary"></div>
      <div id="generazione" style="margin-top:8px;font-weight:700"></div>
      <div class="note" id="rangeNote"></div>
    </div>

    <footer>
      Generazioni considerate (cronologico): Greatest Generation (1901-1927), Generazione Silenziosa (1928-1945), Baby Boomers (1946-1964), Generazione X (1965-1980), Millennials (1981-1996), Generazione Z (1997-2012), Generazione Alpha (2013 in poi).
    </footer>
  </div>

  <script>
    // Determina la generazione a partire dall'anno di nascita
    function determinaGenerazione(year){
      if (!Number.isFinite(year)) return null;
      if (year >= 2013) return {nome: 'Generazione Alpha', range: '2013 – in poi'};
      if (year >= 1997) return {nome: 'Generazione Z', range: '1997 – 2012'};
      if (year >= 1981) return {nome: 'Millennials', range: '1981 – 1996'};
      if (year >= 1965) return {nome: 'Generazione X', range: '1965 – 1980'};
      if (year >= 1946) return {nome: 'Baby Boomers', range: '1946 – 1964'};
      if (year >= 1928) return {nome: 'Generazione Silenziosa', range: '1928 – 1945'};
      if (year >= 1901) return {nome: 'Greatest Generation', range: '1901 – 1927'};
      return {nome: 'Antecedente (pre-1901)', range: 'prima del 1901'};
    }

    // Calcola età precisa intera (anni) dalla data
    function calcolaEta(dateString){
      if (!dateString) return null;
      const today = new Date();
      const dob = new Date(dateString + 'T00:00:00'); // evita fusi orari ambigui
      if (isNaN(dob)) return null;
      let age = today.getFullYear() - dob.getFullYear();
      const m = today.getMonth() - dob.getMonth();
      if (m < 0 || (m === 0 && today.getDate() < dob.getDate())){
        age--;
      }
      return age;
    }

    // Handler principale
    const calcolaBtn = document.getElementById('calcolaBtn');
    const resetBtn = document.getElementById('resetBtn');
    const nascitaInput = document.getElementById('nascita');
    const etaInput = document.getElementById('eta');
    const output = document.getElementById('output');
    const summary = document.getElementById('summary');
    const generazione = document.getElementById('generazione');
    const rangeNote = document.getElementById('rangeNote');

    calcolaBtn.addEventListener('click', ()=>{
      const nome = document.getElementById('nome').value.trim();
      const cognome = document.getElementById('cognome').value.trim();
      const indirizzo = document.getElementById('indirizzo').value.trim();
      const citta = document.getElementById('citta').value.trim();
      const cap = document.getElementById('cap').value.trim();
      const nascita = nascitaInput.value;

      // Validazioni minime
      if (!nome || !cognome){
        alert('Inserisci almeno Nome e Cognome.');
        return;
      }

      // Calcolo età
      const eta = calcolaEta(nascita);
      if (eta === null && nascita){
        alert('Data di nascita non valida.');
        return;
      }
      if (eta !== null && eta < 0){
        alert('La data di nascita è nel futuro. Controlla il valore.');
        return;
      }

      etaInput.value = eta !== null ? eta : '';

      // Determina generazione
      let genText = 'N/D';
      let range = '';
      if (nascita){
        const year = new Date(nascita + 'T00:00:00').getFullYear();
        const gen = determinaGenerazione(year);
        if (gen) { genText = gen.nome; range = gen.range; }
      }

      // Mostra output
      summary.innerHTML = `Utente: <strong>${escapeHtml(nome)} ${escapeHtml(cognome)}</strong><br>
                           Indirizzo: ${escapeHtml(indirizzo || 'N/D')} — ${escapeHtml(citta || 'N/D')} (CAP: ${escapeHtml(cap || 'N/D')})<br>
                           Data di nascita: ${escapeHtml(nascita || 'N/D')} — Età: ${eta !== null ? eta : 'N/D'}`;
      generazione.textContent = `Generazione: ${genText}`;
      rangeNote.textContent = range ? `Intervallo di riferimento: ${range}` : '';
      output.hidden = false;
    });

    resetBtn.addEventListener('click', ()=>{
      document.getElementById('anagraficaForm').reset();
      etaInput.value = '';
      output.hidden = true;
    });

    // piccola funzione di escape per evitare XSS se si copia/incolla testo
    function escapeHtml(str){
      if (!str) return '';
      return str.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#39;');
    }

    // Calcolo automatico dell'età se si cambia la data
    nascitaInput.addEventListener('change', ()=>{
      const eta = calcolaEta(nascitaInput.value);
      etaInput.value = eta !== null ? eta : '';
    });
  </script>
</body>
</html>

